<!-- vim: syntax=markdown -->

# Advent of Code 2021-09

## Day 9: Smoke Basin

Problem Link: https://adventofcode.com/2021/day/9

## Setup

```elixir
Mix.install([
  {:kino, "~> 0.4.1"},
  {:vega_lite, "~> 0.1.2"},
  {:nx, github: "elixir-nx/nx", sparse: "nx"}
])
```

```elixir
alias VegaLite, as: Vl
```

```elixir
input = Kino.Input.textarea("Please paste your input file:")
```

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
data =
  input
  |> Kino.Input.read()
  |> String.split("\n", trim: true)
  |> Enum.map(fn line -> String.to_charlist(line) |> Enum.map(&(&1 - ?0)) end)
  |> Nx.tensor()

data[1][3] |> Nx.to_scalar()
```

## Part 1

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
{rows, cols} = Nx.shape(data)

for y <- 0..(rows - 1),
    x <- 0..(cols - 1),
    above = {y - 1, x},
    below = {y + 1, x},
    left = {y, x - 1},
    right = {y, x + 1},
    v = Nx.to_scalar(data[y][x]),
    reduce: 0 do
  acc ->
    [above, below, left, right]
    |> Enum.filter(fn {y2, x2} ->
      x2 >= 0 and x2 < cols and y2 >= 0 and
        y2 < rows
    end)
    |> Enum.all?(fn {y2, x2} -> Nx.to_scalar(data[y2][x2]) > v end)
    |> then(&(acc + ((&1 && v + 1) || 0)))
end
```

## Part 2

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir

```
